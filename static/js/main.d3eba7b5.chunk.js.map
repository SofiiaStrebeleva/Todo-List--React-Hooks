{"version":3,"sources":["TodoForm.js","useInputState.js","TodoList.js","index.js","useTodoState.js"],"names":["TodoForm","saveTodo","initialValue","useState","value","setValue","onChange","event","target","reset","useInputState","onSubmit","preventDefault","TextField","variant","placeholder","margin","TodoList","todos","deleteTodo","List","map","todo","index","ListItem","key","toString","dense","button","Checkbox","tabIndex","disableRipple","ListItemText","primary","ListItemSecondaryAction","IconButton","aria-label","onClick","App","setTodos","addTodo","todoText","todoIndex","newTodos","filter","_","useTodoState","className","Typography","component","trimmedText","trim","length","rootElement","document","getElementById","ReactDOM","render"],"mappings":"oPA0BeA,EAvBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,ECFpB,SAAAC,GAAiB,IAAD,EACJC,mBAASD,GADL,mBACvBE,EADuB,KAChBC,EADgB,KAG9B,MAAO,CACND,QACAE,SAAU,SAAAC,GACTF,EAASE,EAAMC,OAAOJ,QAEvBK,MAAO,kBAAMJ,EAAS,MDLWK,CAAc,IAAzCN,EAD2B,EAC3BA,MAAOK,EADoB,EACpBA,MAAQH,EADY,EACZA,SAEtB,OACC,0BACCK,SAAU,SAAAJ,GACVA,EAAMK,iBAENX,EAASG,GACTK,MAGA,kBAACI,EAAA,EAAD,CACCC,QAAQ,WACRC,YAAY,WACZC,OAAO,SACPV,SAAUA,EACVF,MAAOA,M,uEEUIa,EArBE,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,WAAV,OAChB,kBAACC,EAAA,EAAD,KACEF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACV,kBAACC,EAAA,EAAD,CAAUC,IAAKF,EAAMG,WAAYC,OAAK,EAACC,QAAM,GAC5C,kBAACC,EAAA,EAAD,CAAUC,UAAW,EAAGC,eAAa,IACrC,kBAACC,EAAA,EAAD,CAAcC,QAASX,IACvB,kBAACY,EAAA,EAAD,KACJ,kBAACC,EAAA,EAAD,CACCC,aAAW,SACXC,QAAS,WACRlB,EAAWI,KAGZ,kBAAC,IAAD,c,QCdKe,EAAM,WAAO,IAAD,ECPH,SAAApC,GAAiB,IAAD,EACJC,mBAASD,GADL,mBACvBgB,EADuB,KAChBqB,EADgB,KAG9B,MAAO,CACNrB,QACAsB,QAAS,SAAAC,GACRF,EAAS,GAAD,mBAAKrB,GAAL,CAAYuB,MAErBtB,WAAY,SAAAuB,GACX,IAAMC,EAAWzB,EACf0B,QAAO,SAACC,EAAGtB,GAAJ,OAAcA,IAAUmB,KAEjCH,EAASI,KDJ+BG,CAAa,IAA5C5B,EADM,EACNA,MAAOsB,EADD,EACCA,QAASrB,EADV,EACUA,WAExB,OACI,yBAAK4B,UAAU,OACX,kBAACC,EAAA,EAAD,CAAYC,UAAU,KAAKnC,QAAQ,MAAnC,SAIA,kBAAC,EAAD,CACIb,SAAU,SAAAwC,GACN,IAAMS,EAAcT,EAASU,OAEzBD,EAAYE,OAAS,GACrBZ,EAAQU,MAKpB,kBAAC,EAAD,CACIhC,MAAOA,EACPC,WAAYA,MAMtBkC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,kBAAC,EAAD,MAASJ,K","file":"static/js/main.d3eba7b5.chunk.js","sourcesContent":["import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport useInputState from './useInputState';\nconst TodoForm = ({ saveTodo }) => {\n\tconst {value, reset,  onChange} = useInputState('');\n\n\treturn (\n\t\t<form\n\t\t\tonSubmit={event => {\n\t\t\tevent.preventDefault();\n\n\t\t\tsaveTodo(value);\n\t\t\treset();\n\t\t}}\n\t\t>\n\t\t\t<TextField\n\t\t\t\tvariant=\"outlined\"\n\t\t\t\tplaceholder=\"Add toDo\"\n\t\t\t\tmargin=\"normal\"\n\t\t\t\tonChange={onChange}\n\t\t\t\tvalue={value}\n\t\t\t\t/>\n\t\t</form>\n\t);\n};\n\nexport default TodoForm;","import {useState} from 'react';\nexport default initialValue => {\n\tconst [value, setValue] = useState(initialValue);\n\n\treturn {\n\t\tvalue,\n\t\tonChange: event => {\n\t\t\tsetValue(event.target.value);\n\t\t},\n\t\treset: () => setValue('')\n\t};\n};","import React from 'react';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst TodoList = ({ todos, deleteTodo }) => (\n\t<List>\n\t\t{todos.map((todo, index) => (\n\t\t\t<ListItem key={index.toString()} dense button>\n\t\t\t\t<Checkbox tabIndex={-1}\tdisableRipple />\n\t\t\t\t<ListItemText primary={todo} />\n\t\t\t\t<ListItemSecondaryAction>\n<IconButton\n\taria-label=\"Delete\"\n\tonClick={() => {\n\t\tdeleteTodo(index);\n\t}}\n\t>\n\t<DeleteIcon />\n</IconButton>\n\t\t\t\t</ListItemSecondaryAction>\n\t\t\t</ListItem>\n\t\t) )}\n\t</List>\n);\n\nexport default TodoList;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Typography from '@material-ui/core/Typography';\nimport TodoForm from './TodoForm';\nimport TodoList from './TodoList';\nimport useTodoState from './useTodoState';\n\nconst App = () => {\n    const { todos, addTodo, deleteTodo } = useTodoState([]);\n\n    return (\n        <div className=\"App\">\n            <Typography component=\"h1\" variant=\"h2\">\n                Todos\n            </Typography>\n\n            <TodoForm\n                saveTodo={todoText => {\n                    const trimmedText = todoText.trim();\n\n                    if (trimmedText.length > 0) {\n                        addTodo(trimmedText);\n                    }\n                }}\n            />\n\n            <TodoList\n                todos={todos}\n                deleteTodo={deleteTodo}\n            />\n        </div>\n    );\n};\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(<App />, rootElement);\n","import {useState} from 'react';\nexport default initialValue => {\n\tconst [todos, setTodos] = useState(initialValue);\n\n\treturn {\n\t\ttodos,\n\t\taddTodo: todoText => {\n\t\t\tsetTodos([...todos, todoText]);\n\t\t},\n\t\tdeleteTodo: todoIndex => {\n\t\t\tconst newTodos = todos\n\t\t\t\t.filter((_, index) => index !== todoIndex);\n\n\t\t\tsetTodos(newTodos);\n\t\t}\n\t}\n}"],"sourceRoot":""}